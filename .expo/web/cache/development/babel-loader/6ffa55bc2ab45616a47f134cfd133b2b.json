{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Autocomplete } from \"../Autocomplete/Autocomplete\";\nimport { getPokemonNames } from \"../../services/PokemonDataService.jsx\";\nimport { PokemonContext } from \"../Contexts/PokemonContext.jsx\";\nimport { Capitalize } from \"../../Functions\";\nexport var SearchPokemon = function SearchPokemon() {\n  var _useContext = useContext(PokemonContext),\n      updatePokemon = _useContext.updatePokemon;\n\n  var _useState = useState(['']),\n      _useState2 = _slicedToArray(_useState, 2),\n      pokemonNames = _useState2[0],\n      setPokemonNames = _useState2[1];\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setPokemonNames;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getPokemonNames());\n\n          case 3:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(Autocomplete, {\n    data: pokemonNames,\n    icon: 'pokeball',\n    LoadData: updatePokemon,\n    placeholder: 'Search Pokémon'\n  });\n};","map":{"version":3,"sources":["C:/Users/2904366/OneDrive - Jabil/Desktop/Pokedex-ReactNative/components/SearchPokemon/SearchPokemon.jsx"],"names":["React","useContext","useEffect","useState","Autocomplete","getPokemonNames","PokemonContext","Capitalize","SearchPokemon","updatePokemon","pokemonNames","setPokemonNames"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,SAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,YAAT;AACA,SAAQC,eAAR;AACA,SAAQC,cAAR;AACA,SAASC,UAAT;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAE/B,oBAA0BP,UAAU,CAACK,cAAD,CAApC;AAAA,MAAQG,aAAR,eAAQA,aAAR;;AAEA,kBAAwCN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhD;AAAA;AAAA,MAAOO,YAAP;AAAA,MAAqBC,eAArB;;AAEAT,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAYS,eAAZ;AAAA;AAAA,6CAAkCN,eAAe,EAAjD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAAuD,EAAvD,CAAT;AAGA,SACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEK,YAApB;AAAkC,IAAA,IAAI,EAAE,UAAxC;AAAoD,IAAA,QAAQ,EAAED,aAA9D;AAA6E,IAAA,WAAW,EAAE;AAA1F,IADJ;AAKH,CAdM","sourcesContent":["import React, { useContext,useEffect,useState } from 'react'\r\nimport { Autocomplete } from '../Autocomplete/Autocomplete'\r\nimport {getPokemonNames} from '../../services/PokemonDataService.jsx'\r\nimport {PokemonContext} from '../Contexts/PokemonContext.jsx'\r\nimport { Capitalize } from '../../Functions'\r\n\r\n\r\nexport const SearchPokemon = () => {\r\n\r\n    const { updatePokemon } = useContext(PokemonContext)\r\n\r\n    const [pokemonNames, setPokemonNames] = useState(['']);\r\n\r\n    useEffect(async () => setPokemonNames(await getPokemonNames()), [])\r\n\r\n\r\n    return (\r\n        <Autocomplete data={pokemonNames} icon={'pokeball'} LoadData={updatePokemon} placeholder={'Search Pokémon'} />\r\n    )\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}