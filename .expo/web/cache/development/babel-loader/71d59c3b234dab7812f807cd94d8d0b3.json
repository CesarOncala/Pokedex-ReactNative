{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useContext } from 'react';\nimport { Card, Avatar, RadioButton } from 'react-native-paper';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles.jsx\";\nimport { PokemonContext } from \"../../Contexts/PokemonContext.jsx\";\n\nvar Header = function Header(props) {\n  var LeftContent = function LeftContent(props) {\n    return React.createElement(Avatar.Icon, _extends({\n      onTouchStart: function onTouchStart() {\n        return alert('CÃ©sar Henrique Alves Oncala \\nEu vou vencer! ðŸ˜„');\n      },\n      style: {\n        backgroundColor: 'black'\n      }\n    }, props));\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _useContext = useContext(PokemonContext),\n      pokemon = _useContext.pokemon;\n\n  return React.createElement(React.Fragment, null, React.createElement(Card.Title, {\n    title: pokemon == null ? void 0 : pokemon.name.toUpperCase(),\n    subtitle: pokemon == null ? void 0 : pokemon.general.genus,\n    titleStyle: styles.value,\n    subtitleStyle: styles.value,\n    right: function right() {\n      return React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          borderRadius: 5,\n          marginRight: 12,\n          backgroundColor: 'grey',\n          color: 'white'\n        }\n      }, \" #\", pokemon == null ? void 0 : pokemon.general.order, \" \");\n    },\n    left: function left() {\n      return LeftContent({\n        icon: 'pokeball',\n        size: 40,\n        color: 'white'\n      });\n    }\n  }), React.createElement(Image, {\n    style: styles.sprite,\n    source: {\n      uri: pokemon == null ? void 0 : pokemon.sprite['' || checked]\n    }\n  }), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-evenly'\n    }\n  }, React.createElement(View, {\n    style: styles.radioBtn\n  }, React.createElement(Text, {\n    style: styles.value\n  }, \" Normal \"), React.createElement(RadioButton, {\n    theme: {\n      colors: {\n        text: 'white'\n      }\n    },\n    value: 0,\n    status: checked === 0 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      return setChecked(0);\n    }\n  })), React.createElement(View, {\n    style: styles.radioBtn\n  }, React.createElement(Text, {\n    style: styles.value,\n    for: \"shiny\"\n  }, \" Shiny \"), React.createElement(RadioButton, {\n    theme: {\n      colors: {\n        text: 'white'\n      }\n    },\n    id: \"shiny\",\n    value: 1,\n    status: checked === 1 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      return setChecked(1);\n    }\n  }))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/2904366/OneDrive - Jabil/Desktop/Pokedex-ReactNative/components/PokeCard/Header/Header.jsx"],"names":["React","useContext","Card","Avatar","RadioButton","styles","PokemonContext","Header","props","LeftContent","alert","backgroundColor","useState","checked","setChecked","pokemon","name","toUpperCase","general","genus","value","fontSize","borderRadius","marginRight","color","order","icon","size","sprite","uri","display","alignItems","flexDirection","justifyContent","radioBtn","colors","text"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Card, Avatar, RadioButton } from 'react-native-paper'\r\nimport { Text, Image, View } from 'react-native'\r\nimport { styles } from './styles.jsx';\r\nimport { PokemonContext } from '../../Contexts/PokemonContext.jsx'\r\n\r\nconst Header = (props) => {\r\n\r\n  const LeftContent = props => <Avatar.Icon onTouchStart={() => alert('CÃ©sar Henrique Alves Oncala \\nEu vou vencer! ðŸ˜„')} style={{ backgroundColor: 'black' }} {...props} />\r\n  const [checked, setChecked] = React.useState(0);\r\n\r\n  const { pokemon } = useContext(PokemonContext)\r\n\r\n  return (\r\n    <>\r\n      <Card.Title title={pokemon?.name.toUpperCase()}\r\n        subtitle={pokemon?.general.genus}\r\n        titleStyle={styles.value}\r\n        subtitleStyle={styles.value}\r\n        right={() => <Text style={{\r\n          fontSize: 25,\r\n          borderRadius: 5,\r\n          marginRight: 12,\r\n          backgroundColor: 'grey'\r\n          , color: 'white'\r\n        }}> #{pokemon?.general.order} </Text>}\r\n        left={() => LeftContent({ icon: 'pokeball', size: 40, color: 'white' })}\r\n      />\r\n\r\n      <Image style={styles.sprite} source={{ uri: pokemon?.sprite['' || checked] }} />\r\n\r\n      <View style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly'\r\n      }}>\r\n\r\n        <View style={styles.radioBtn}>\r\n          <Text style={styles.value}> Normal </Text>\r\n          <RadioButton\r\n            theme={{ colors: { text: 'white' } }}\r\n            value={0}\r\n            status={checked === 0 ? 'checked' : 'unchecked'}\r\n            onPress={() => setChecked(0)}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.radioBtn}>\r\n          <Text style={styles.value} for='shiny'> Shiny </Text>\r\n          <RadioButton\r\n            theme={{ colors: { text: 'white' } }}\r\n            id='shiny'\r\n            value={1}\r\n            status={checked === 1 ? 'checked' : 'unchecked'}\r\n            onPress={() => setChecked(1)}\r\n          />\r\n        </View>\r\n      </View>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}