{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext } from 'react';\nimport { Autocomplete } from \"../Autocomplete/Autocomplete\";\nimport getPokemonNames from \"../../services/PokemonDataService.jsx\";\nimport PokemonContext from \"../Contexts/PokemonContext.jsx\";\nimport { useEffect } from 'react/cjs/react.production.min';\nimport Capitalize from \"../../Functions\";\nexport var SearchPokemon = function SearchPokemon() {\n  var _useContext = useContext(PokemonContext),\n      updatePokemon = _useContext.updatePokemon;\n\n  useEffect(function _callee() {\n    var _getPokemonNames;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap((_getPokemonNames = getPokemonNames()) == null ? void 0 : _getPokemonNames.map(function (o) {\n              return Capitalize(o);\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(Autocomplete, {\n    data: data,\n    icon: 'pokeball',\n    LoadData: updatePokemon,\n    placeholder: 'Search Pokémon'\n  });\n};","map":{"version":3,"sources":["C:/Users/2904366/OneDrive - Jabil/Desktop/Pokedex-ReactNative/components/SearchPokemon/SearchPokemon.jsx"],"names":["React","useContext","Autocomplete","getPokemonNames","PokemonContext","useEffect","Capitalize","SearchPokemon","updatePokemon","map","o","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,UAAP;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAE/B,oBAA0BN,UAAU,CAACG,cAAD,CAApC;AAAA,MAAQI,aAAR,eAAQA,aAAR;;AAEAH,EAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAAkBF,eAAe,EAAjC,qBAAkB,iBAAmBM,GAAnB,CAAuB,UAAAC,CAAC;AAAA,qBAAIJ,UAAU,CAACI,CAAD,CAAd;AAAA,aAAxB,CAAlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAA+D,EAA/D,CAAT;AAIA,SACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEC,IAApB;AAA0B,IAAA,IAAI,EAAE,UAAhC;AAA4C,IAAA,QAAQ,EAAEH,aAAtD;AAAqE,IAAA,WAAW,EAAE;AAAlF,IADJ;AAKH,CAbM","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Autocomplete } from '../Autocomplete/Autocomplete'\r\nimport getPokemonNames from '../../services/PokemonDataService.jsx'\r\nimport PokemonContext from '../Contexts/PokemonContext.jsx'\r\nimport { useEffect } from 'react/cjs/react.production.min'\r\nimport Capitalize from '../../Functions'\r\n\r\n\r\nexport const SearchPokemon = () => {\r\n\r\n    const { updatePokemon } = useContext(PokemonContext)\r\n\r\n    useEffect(async () => await getPokemonNames()?.map(o => Capitalize(o)), [])\r\n\r\n\r\n\r\n    return (\r\n        <Autocomplete data={data} icon={'pokeball'} LoadData={updatePokemon} placeholder={'Search Pokémon'} />\r\n    )\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}