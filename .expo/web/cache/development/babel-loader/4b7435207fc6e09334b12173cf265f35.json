{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Capitalize } from \"../../../Functions.jsx\";\nimport { styles } from \"./style.jsx\";\nimport translate from 'translate-google-api';\n\nvar Body = function Body(props) {\n  var _props$pokemon, _props$pokemon$genera, _props$pokemon2, _props$pokemon3, _props$pokemon4, _props$pokemon4$gener, _props$pokemon5, _props$pokemon5$gener, _props$pokemon6, _props$pokemon6$gener, _props$pokemon7, _props$pokemon8, _props$pokemon9;\n\n  function getTranslate() {\n    return _regeneratorRuntime.async(function getTranslate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(translate('suck my dick', {\n              to: 'pt'\n            }).then(function (o) {\n              return o;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.info_group\n  }, React.createElement(View, {\n    style: styles.elementGroup\n  }, React.createElement(Text, {\n    style: [styles.value, {\n      textAlign: 'justify'\n    }]\n  }, (_props$pokemon = props.pokemon) == null ? void 0 : (_props$pokemon$genera = _props$pokemon.general) == null ? void 0 : _props$pokemon$genera.description)), React.createElement(View, {\n    style: styles.elementGroup\n  }, React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Types: \"), (_props$pokemon2 = props.pokemon) == null ? void 0 : _props$pokemon2.types), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Habilities: \"), (_props$pokemon3 = props.pokemon) == null ? void 0 : _props$pokemon3.abilities), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Lengendary: \"), (_props$pokemon4 = props.pokemon) == null ? void 0 : (_props$pokemon4$gener = _props$pokemon4.general) == null ? void 0 : _props$pokemon4$gener.lengendary.toString()), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Mythical: \"), (_props$pokemon5 = props.pokemon) == null ? void 0 : (_props$pokemon5$gener = _props$pokemon5.general) == null ? void 0 : _props$pokemon5$gener.mythical.toString()), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Shape: \"), (_props$pokemon6 = props.pokemon) == null ? void 0 : (_props$pokemon6$gener = _props$pokemon6.general) == null ? void 0 : _props$pokemon6$gener.shape), React.createElement(Text, {\n    style: styles.value\n  }, \" \", React.createElement(Text, {\n    style: styles.text\n  }, \"Height: \"), \"  \", (_props$pokemon7 = props.pokemon) == null ? void 0 : _props$pokemon7.height), React.createElement(Text, {\n    style: styles.value\n  }, \" \", React.createElement(Text, {\n    style: styles.text\n  }, \"Weight: \"), \"  \", (_props$pokemon8 = props.pokemon) == null ? void 0 : _props$pokemon8.weight)), React.createElement(View, {\n    style: styles.elementGroup\n  }, (_props$pokemon9 = props.pokemon) == null ? void 0 : _props$pokemon9.stats.map(function (o, i) {\n    return React.createElement(Text, {\n      key: i,\n      style: styles.value\n    }, React.createElement(Text, {\n      style: styles.text\n    }, \"  \", Capitalize(o.stat), \" : \"), o.base_stat);\n  })));\n};\n\nexport default Body;","map":{"version":3,"sources":["C:/Users/rick/Downloads/PokedexMobile-ReactNative-main/components/PokeCard/Body/Body.jsx"],"names":["React","Capitalize","styles","translate","Body","props","getTranslate","to","then","o","info_group","elementGroup","value","textAlign","pokemon","general","description","text","types","abilities","lengendary","toString","mythical","shape","height","weight","stats","map","i","stat","base_stat"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { Capitalize } from '../../../Functions.jsx';\r\nimport { styles } from './style.jsx'\r\nimport translate from 'translate-google-api'\r\n\r\nconst Body = (props) => {\r\n\r\n      async function getTranslate() {\r\n            await translate('suck my dick', { to: 'pt' }).then(o => o)\r\n      }\r\n\r\n\r\n      return (<View style={styles.info_group}>\r\n\r\n            <View style={styles.elementGroup}>\r\n                  <Text style={[styles.value, { textAlign: 'justify' }]}>\r\n                        {props.pokemon?.general?.description}\r\n                  </Text>\r\n            </View>\r\n\r\n\r\n            <View style={styles.elementGroup}>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Types: </Text>\r\n                        {props.pokemon?.types}\r\n                  </Text>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Habilities: </Text>\r\n                        {props.pokemon?.abilities}\r\n                  </Text>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Lengendary: </Text>\r\n                        {props.pokemon?.general?.lengendary.toString()}\r\n                  </Text>\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Mythical: </Text>\r\n                        {props.pokemon?.general?.mythical.toString()}\r\n                  </Text>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Shape: </Text>\r\n                        {props.pokemon?.general?.shape}\r\n                  </Text>\r\n\r\n\r\n\r\n                  <Text style={styles.value}> <Text style={styles.text}>Height: </Text>  {props.pokemon?.height}\r\n                  </Text>\r\n                  <Text style={styles.value}> <Text style={styles.text}>Weight: </Text>  {props.pokemon?.weight}\r\n                  </Text>\r\n\r\n            </View>\r\n\r\n\r\n\r\n            <View style={styles.elementGroup}>\r\n                  {props.pokemon?.stats.map((o, i) =>\r\n                        <Text key={i} style={styles.value}>\r\n                              <Text style={styles.text}>  {Capitalize(o.stat)} : </Text>\r\n                              {o.base_stat}\r\n                        </Text>)}\r\n            </View>\r\n      </View>)\r\n}\r\n\r\nexport default Body;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}