{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { Card, Avatar, RadioButton } from 'react-native-paper';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"react-native-web/dist/index\";\n\nvar Header = function Header(props) {\n  var _props$pokemon, _props$pokemon2, _props$pokemon4;\n\n  var LeftContent = function LeftContent(props) {\n    return React.createElement(Avatar.Icon, _extends({\n      onTouchStart: function onTouchStart() {\n        return alert('CÃ©sar Henrique Alves Oncala \\nEu vou vencer! ðŸ˜„');\n      },\n      style: {\n        backgroundColor: 'black'\n      }\n    }, props));\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Card.Title, {\n    title: (_props$pokemon = props.pokemon) == null ? void 0 : _props$pokemon.name.toUpperCase(),\n    subtitle: (_props$pokemon2 = props.pokemon) == null ? void 0 : _props$pokemon2.general.genus,\n    titleStyle: styles.value,\n    subtitleStyle: styles.value,\n    right: function right() {\n      var _props$pokemon3;\n\n      return React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          borderRadius: 5,\n          marginRight: 12,\n          backgroundColor: 'grey',\n          color: 'white'\n        }\n      }, \" #\", (_props$pokemon3 = props.pokemon) == null ? void 0 : _props$pokemon3.general.order, \" \");\n    },\n    left: function left() {\n      return LeftContent({\n        icon: 'pokeball',\n        size: 40,\n        color: 'white'\n      });\n    }\n  }), React.createElement(Image, {\n    style: styles.sprite,\n    source: {\n      uri: (_props$pokemon4 = props.pokemon) == null ? void 0 : _props$pokemon4.sprite[checked]\n    }\n  }), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'row',\n      justifyContent: 'space-evenly'\n    }\n  }, React.createElement(View, {\n    style: styles.radioBtn\n  }, React.createElement(Text, {\n    style: styles.value\n  }, \" Normal \"), React.createElement(RadioButton, {\n    theme: {\n      colors: {\n        text: 'white'\n      }\n    },\n    value: 0,\n    status: checked === 0 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      return setChecked(0);\n    }\n  })), React.createElement(View, {\n    style: styles.radioBtn\n  }, React.createElement(Text, {\n    style: styles.value,\n    for: \"shiny\"\n  }, \" Shiny \"), React.createElement(RadioButton, {\n    theme: {\n      colors: {\n        text: 'white'\n      }\n    },\n    id: \"shiny\",\n    value: 1,\n    status: checked === 1 ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      return setChecked(1);\n    }\n  }))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/2904366/Downloads/PokedexMobile-ReactNative-main/components/PokeCard/Header/Header.jsx"],"names":["React","Card","Avatar","RadioButton","styles","Header","props","LeftContent","alert","backgroundColor","useState","checked","setChecked","pokemon","name","toUpperCase","general","genus","value","fontSize","borderRadius","marginRight","color","order","icon","size","sprite","uri","display","alignItems","flexDirection","justifyContent","radioBtn","colors","text"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Card, Avatar,RadioButton} from 'react-native-paper'\r\nimport {Text,Image,View} from 'react-native'\r\nimport {styles} from 'react-native';\r\n\r\nconst Header = (props)=>{\r\n\r\nconst LeftContent = props => <Avatar.Icon onTouchStart={()=> alert('CÃ©sar Henrique Alves Oncala \\nEu vou vencer! ðŸ˜„')}  style={{backgroundColor:'black'}} {...props} />\r\nconst [checked, setChecked] = React.useState(0);\r\n\r\n\r\nreturn(\r\n  <>\r\n      <Card.Title title={props.pokemon?.name.toUpperCase()}\r\n        subtitle={props.pokemon?.general.genus}\r\n        titleStyle={styles.value}\r\n        subtitleStyle={styles.value}\r\n        right={() => <Text style={{\r\n          fontSize:25,\r\n          borderRadius:5,\r\n          marginRight:12,\r\n          backgroundColor:'grey'\r\n          ,color:'white'}}> #{props.pokemon?.general.order} </Text> }\r\n          left={()=>LeftContent({icon:'pokeball', size: 40, color:'white'})}\r\n        />\r\n\r\n          <Image style={styles.sprite} source={{uri: props.pokemon?.sprite[checked] }}/>\r\n        \r\n          <View style={{display:'flex', \r\n            alignItems:'center',\r\n            flexDirection:'row',\r\n            justifyContent:'space-evenly'}}> \r\n              \r\n              <View style={styles.radioBtn}>\r\n                <Text style={styles.value}> Normal </Text>\r\n                <RadioButton\r\n                theme={{colors:{text:'white'} }}\r\n                value={0}\r\n                status={ checked === 0? 'checked' : 'unchecked' }\r\n                onPress={() => setChecked(0)}\r\n                  />\r\n              </View>\r\n\r\n              <View style={styles.radioBtn}>   \r\n                <Text style={styles.value} for='shiny'> Shiny </Text>\r\n                <RadioButton\r\n                  theme={{colors:{text:'white'} }}\r\n                  id='shiny'\r\n                  value={1}\r\n                  status={ checked === 1 ? 'checked' : 'unchecked' }\r\n                  onPress={() => setChecked(1)}\r\n                />\r\n              </View>\r\n            </View>\r\n            </>\r\n        )\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}