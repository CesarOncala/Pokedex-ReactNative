{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Capitalize } from \"../../../Functions.jsx\";\nimport { styles } from \"./style.jsx\";\nimport translate from 'translate-google-api';\nimport { PokemonContext } from \"../../Contexts/PokemonContext.jsx\";\n\nvar Body = function Body() {\n  var _pokemon$general3, _pokemon$general4, _pokemon$general5;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      description = _React$useState2[0],\n      setdescription = _React$useState2[1];\n\n  var _useContext = useContext(PokemonContext),\n      pokemon = _useContext.pokemon;\n\n  function getTranslate(text, lang) {\n    return _regeneratorRuntime.async(function getTranslate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", 'ok');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  React.useEffect(function _callee() {\n    var _pokemon$general, _pokemon$general2;\n\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = setdescription;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getTranslate(pokemon == null ? void 0 : (_pokemon$general = pokemon.general) == null ? void 0 : _pokemon$general.description, 'en'));\n\n          case 3:\n            _context2.t1 = _context2.sent;\n            _context2.t2 = _context2.t1 + '\\n\\n';\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(getTranslate(pokemon == null ? void 0 : (_pokemon$general2 = pokemon.general) == null ? void 0 : _pokemon$general2.description, 'pt'));\n\n          case 7:\n            _context2.t3 = _context2.sent;\n            _context2.t4 = _context2.t2 + _context2.t3;\n            (0, _context2.t0)(_context2.t4);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [pokemon]);\n  return React.createElement(View, {\n    style: styles.info_group\n  }, React.createElement(View, {\n    style: styles.elementGroup\n  }, React.createElement(Text, {\n    style: [styles.value, {\n      textAlign: 'justify'\n    }]\n  }, description)), React.createElement(View, {\n    style: styles.elementGroup\n  }, React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Types: \"), pokemon == null ? void 0 : pokemon.types), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Habilities: \"), pokemon == null ? void 0 : pokemon.abilities), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Lengendary: \"), pokemon == null ? void 0 : (_pokemon$general3 = pokemon.general) == null ? void 0 : _pokemon$general3.lengendary.toString()), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Mythical: \"), pokemon == null ? void 0 : (_pokemon$general4 = pokemon.general) == null ? void 0 : _pokemon$general4.mythical.toString()), React.createElement(Text, {\n    style: styles.value\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Shape: \"), pokemon == null ? void 0 : (_pokemon$general5 = pokemon.general) == null ? void 0 : _pokemon$general5.shape), React.createElement(Text, {\n    style: styles.value\n  }, \" \", React.createElement(Text, {\n    style: styles.text\n  }, \"Height: \"), \"  \", pokemon == null ? void 0 : pokemon.height), React.createElement(Text, {\n    style: styles.value\n  }, \" \", React.createElement(Text, {\n    style: styles.text\n  }, \"Weight: \"), \"  \", pokemon == null ? void 0 : pokemon.weight)), React.createElement(View, {\n    style: styles.elementGroup\n  }, pokemon == null ? void 0 : pokemon.stats.map(function (o, i) {\n    return React.createElement(Text, {\n      key: i,\n      style: styles.value\n    }, React.createElement(Text, {\n      style: [styles.text]\n    }, \"  \", Capitalize(o.stat), \" : \"), o.base_stat);\n  })));\n};\n\nexport default Body;","map":{"version":3,"sources":["C:/Users/2904366/OneDrive - Jabil/Desktop/Pokedex-ReactNative/components/PokeCard/Body/Body.jsx"],"names":["React","useContext","Capitalize","styles","translate","PokemonContext","Body","useState","description","setdescription","pokemon","getTranslate","text","lang","useEffect","general","info_group","elementGroup","value","textAlign","types","abilities","lengendary","toString","mythical","shape","height","weight","stats","map","o","i","stat","base_stat"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { Capitalize } from '../../../Functions.jsx';\r\nimport { styles } from './style.jsx'\r\nimport translate from 'translate-google-api'\r\nimport { PokemonContext } from '../../Contexts/PokemonContext.jsx';\r\n\r\nconst Body = () => {\r\n\r\n\r\n      const [description, setdescription] = React.useState('');\r\n      const {pokemon} = useContext(PokemonContext)\r\n\r\n      async function getTranslate(text, lang) {\r\n            //  return await translate(text, { to: lang }).then(o => o)\r\n            return 'ok'\r\n      }\r\n\r\n      React.useEffect(async () => {\r\n           setdescription(await getTranslate(pokemon?.general?.description,'en') +\r\n            '\\n\\n' + await getTranslate(pokemon?.general?.description,'pt'))\r\n      }, [pokemon])\r\n\r\n\r\n      return (<View style={styles.info_group}>\r\n\r\n            <View style={styles.elementGroup}>\r\n                  <Text style={[styles.value, { textAlign: 'justify' }]}>\r\n                        {description}\r\n                  </Text>\r\n            </View>\r\n\r\n\r\n            <View style={styles.elementGroup}>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Types: </Text>\r\n                        {pokemon?.types}\r\n                  </Text>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Habilities: </Text>\r\n                        {pokemon?.abilities}\r\n                  </Text>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Lengendary: </Text>\r\n                        {pokemon?.general?.lengendary.toString()}\r\n                  </Text>\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Mythical: </Text>\r\n                        {pokemon?.general?.mythical.toString()}\r\n                  </Text>\r\n\r\n                  <Text style={styles.value}>\r\n                        <Text style={styles.text}>Shape: </Text>\r\n                        {pokemon?.general?.shape}\r\n                  </Text>\r\n\r\n\r\n\r\n                  <Text style={styles.value}> <Text style={styles.text}>Height: </Text>  {pokemon?.height}\r\n                  </Text>\r\n                  <Text style={styles.value}> <Text style={styles.text}>Weight: </Text>  {pokemon?.weight}\r\n                  </Text>\r\n\r\n            </View>\r\n\r\n\r\n\r\n            <View style={styles.elementGroup}>\r\n                  {pokemon?.stats.map((o, i) =>\r\n                        <Text key={i} style={styles.value}>\r\n                              <Text style={[styles.text]}>  {Capitalize(o.stat)} : </Text>\r\n                              {o.base_stat}\r\n                        </Text>)}\r\n            </View>\r\n      </View>)\r\n}\r\n\r\nexport default Body;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}