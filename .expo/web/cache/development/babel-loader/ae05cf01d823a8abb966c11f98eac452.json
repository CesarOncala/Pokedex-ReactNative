{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar axios = require('axios');\n\nexport function FormatPokemonData(o) {\n  return _regeneratorRuntime.async(function FormatPokemonData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = o.name;\n          _context.t1 = o.types.map(function (o) {\n            return o.type.name;\n          }).join(', ');\n          _context.t2 = getMainSprite(o);\n          _context.t3 = o.game_indices.map(function (o) {\n            return o.version.name;\n          }).sort();\n          _context.t4 = o.abilities.map(function (o) {\n            return o.ability.name;\n          }).join(', ');\n          _context.t5 = o.height;\n          _context.t6 = o.weight;\n          _context.t7 = o.order;\n          _context.t8 = o.moves.map(function (o) {\n            return o.move.name;\n          }).sort();\n          _context.t9 = o.stats.map(function (o) {\n            return {\n              stat: o.stat.name,\n              base_stat: o.base_stat\n            };\n          });\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(fetch(o.species.url).then(function (o) {\n            return o.json();\n          }).then(function (o) {\n            var _o$genera$, _o$shape, _o$flavor_text_entrie, _o$flavor_text_entrie2;\n\n            return {\n              genus: (_o$genera$ = o.genera[7]) == null ? void 0 : _o$genera$.genus,\n              lengendary: o.is_legendary,\n              mythical: o.is_mythical,\n              shape: (_o$shape = o.shape) == null ? void 0 : _o$shape.name,\n              order: o.order,\n              description: o.flavor_text_entries && ((_o$flavor_text_entrie = o.flavor_text_entries[0]) == null ? void 0 : (_o$flavor_text_entrie2 = _o$flavor_text_entrie.flavor_text) == null ? void 0 : _o$flavor_text_entrie2.replace('.', '.\\n'))\n            };\n          }));\n\n        case 12:\n          _context.t10 = _context.sent;\n          _context.t11 = deepSearch(o.sprites).sort(function (x, o) {\n            if (x.includes('back')) return 1;\n            return 0;\n          });\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(GetEvolutionsResult(o));\n\n        case 16:\n          _context.t12 = _context.sent;\n          return _context.abrupt(\"return\", {\n            name: _context.t0,\n            types: _context.t1,\n            sprite: _context.t2,\n            games: _context.t3,\n            abilities: _context.t4,\n            height: _context.t5,\n            weight: _context.t6,\n            order: _context.t7,\n            moves: _context.t8,\n            stats: _context.t9,\n            general: _context.t10,\n            sprites: _context.t11,\n            evolutions: _context.t12\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport var getPokemon = function getPokemon(query) {\n  return _regeneratorRuntime.async(function getPokemon$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = _regeneratorRuntime;\n          _context2.t1 = FormatPokemonData;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get('https://pokeapi.co/api/v2/pokemon/' + query));\n\n        case 4:\n          _context2.t2 = _context2.sent.data;\n          _context2.t3 = (0, _context2.t1)(_context2.t2);\n          _context2.next = 8;\n          return _context2.t0.awrap.call(_context2.t0, _context2.t3);\n\n        case 8:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction GetEvolutionsResult(o) {\n  return _regeneratorRuntime.async(function GetEvolutionsResult$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!(o.name === o.species.name)) {\n            _context7.next = 6;\n            break;\n          }\n\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(fetch(o == null ? void 0 : o.species.url).then(function (o) {\n            return o.json();\n          }).then(function _callee4(o) {\n            return _regeneratorRuntime.async(function _callee4$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return _regeneratorRuntime.awrap(fetch(o.evolution_chain.url).then(function (o) {\n                      return o.json();\n                    }).then(function _callee3(o) {\n                      var _o$chain$species;\n\n                      var evolutions, promise;\n                      return _regeneratorRuntime.async(function _callee3$(_context5) {\n                        while (1) {\n                          switch (_context5.prev = _context5.next) {\n                            case 0:\n                              evolutions = getEvolutions(o.chain.evolves_to);\n                              evolutions.splice(0, 0, (_o$chain$species = o.chain.species) == null ? void 0 : _o$chain$species.name);\n                              promise = new Promise(function (resolve, reject) {\n                                var requests = [];\n                                evolutions.forEach(function (o) {\n                                  requests.push(fetch('https://pokeapi.co/api/v2/pokemon/' + o));\n                                });\n                                Promise.all(requests).then(function (o) {\n                                  return o.map(function _callee(r) {\n                                    return _regeneratorRuntime.async(function _callee$(_context3) {\n                                      while (1) {\n                                        switch (_context3.prev = _context3.next) {\n                                          case 0:\n                                            _context3.next = 2;\n                                            return _regeneratorRuntime.awrap(r.json());\n\n                                          case 2:\n                                            return _context3.abrupt(\"return\", _context3.sent);\n\n                                          case 3:\n                                          case \"end\":\n                                            return _context3.stop();\n                                        }\n                                      }\n                                    }, null, null, null, Promise);\n                                  });\n                                }).then(function _callee2(o) {\n                                  var sprites, pokemons, index;\n                                  return _regeneratorRuntime.async(function _callee2$(_context4) {\n                                    while (1) {\n                                      switch (_context4.prev = _context4.next) {\n                                        case 0:\n                                          sprites = [];\n                                          _context4.next = 3;\n                                          return _regeneratorRuntime.awrap(Promise.all(o));\n\n                                        case 3:\n                                          pokemons = _context4.sent;\n\n                                          for (index = 0; index < pokemons.length; index++) {\n                                            sprites = [].concat(_toConsumableArray(sprites), [getMainSprite(pokemons[index])[0]]);\n                                          }\n\n                                          return _context4.abrupt(\"return\", resolve(sprites));\n\n                                        case 6:\n                                        case \"end\":\n                                          return _context4.stop();\n                                      }\n                                    }\n                                  }, null, null, null, Promise);\n                                });\n                              });\n                              _context5.t0 = Object;\n                              _context5.t1 = evolutions.length;\n                              _context5.t2 = evolutions.filter(function (o) {\n                                return o != '';\n                              });\n                              _context5.next = 8;\n                              return _regeneratorRuntime.awrap(promise);\n\n                            case 8:\n                              _context5.t3 = _context5.sent;\n                              _context5.t4 = [_context5.t2, _context5.t3];\n                              _context5.t5 = {\n                                totalEvolves: _context5.t1,\n                                evolutions: _context5.t4\n                              };\n                              return _context5.abrupt(\"return\", new _context5.t0(_context5.t5));\n\n                            case 12:\n                            case \"end\":\n                              return _context5.stop();\n                          }\n                        }\n                      }, null, null, null, Promise);\n                    }));\n\n                  case 2:\n                    return _context6.abrupt(\"return\", _context6.sent);\n\n                  case 3:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 3:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 6:\n          return _context7.abrupt(\"return\", new Object({\n            totalEvolves: 0,\n            evolutions: [[], []]\n          }));\n\n        case 7:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getEvolutions(evolutions) {\n  var names = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (evolutions.length == 0) return names;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(evolutions), _step; !(_step = _iterator()).done;) {\n    var evolution = _step.value;\n    names.push(evolution.species.name);\n    getEvolutions(evolution.evolves_to, names);\n  }\n\n  return names;\n}\n\nfunction getMainSprite(o) {\n  var shiny = deepSearch(o.sprites, [], 'shiny');\n  var final = shiny.find(function (o) {\n    return o.includes('/home/');\n  }) || shiny.find(function (o) {\n    return !o.includes('back');\n  });\n  return [o.sprites.other.home.front_default != null ? o.sprites.other.home.front_default : o.sprites.other.dream_world.front_default != null ? o.sprites.other.dream_world.front_default : o.sprites.front_default != null ? o.sprites.front_default : deepSearch(o.sprites, [])[0], final];\n}\n\nfunction deepSearch(root) {\n  var buffer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var search = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var sprites = buffer;\n\n  for (var prop in root) {\n    if (typeof root[prop] === \"object\" && root[prop] != null) deepSearch(root[prop], sprites);else sprites.push(root[prop]);\n  }\n\n  sprites = sprites.filter(function (o) {\n    if (o != null && search === '') return true;else if (o != null && o.includes(search)) return true;\n    return false;\n  });\n  return sprites;\n}","map":{"version":3,"sources":["C:/Users/2904366/Downloads/PokedexMobile-ReactNative-main/services/PokemonDataService.jsx"],"names":["axios","require","FormatPokemonData","o","name","types","map","type","join","getMainSprite","game_indices","version","sort","abilities","ability","height","weight","order","moves","move","stats","stat","base_stat","fetch","species","url","then","json","genus","genera","lengendary","is_legendary","mythical","is_mythical","shape","description","flavor_text_entries","flavor_text","replace","deepSearch","sprites","x","includes","GetEvolutionsResult","sprite","games","general","evolutions","getPokemon","query","get","data","evolution_chain","getEvolutions","chain","evolves_to","splice","promise","Promise","resolve","reject","requests","forEach","push","all","r","pokemons","index","length","Object","filter","totalEvolves","names","evolution","shiny","final","find","other","home","front_default","dream_world","root","buffer","search","prop"],"mappings":"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","sourcesContent":["\r\nconst axios = require('axios');\r\n\r\n\r\nexport async function FormatPokemonData(o) {\r\n    return {\r\n  \r\n      name: o.name,\r\n      types: o.types.map(o => o.type.name).join(', '),\r\n      sprite: getMainSprite(o),\r\n      games: o.game_indices.map(o => o.version.name).sort(),\r\n      abilities: o.abilities.map(o => o.ability.name).join(', '),\r\n      height: o.height,\r\n      weight: o.weight,\r\n      order: o.order,\r\n      moves: o.moves.map(o => o.move.name).sort(),\r\n      stats: o.stats.map(o => { return { stat: o.stat.name, base_stat: o.base_stat } }),\r\n      general: await fetch(o.species.url)\r\n        .then(o => o.json())\r\n        .then(o => {\r\n  \r\n          return {\r\n            genus: o.genera[7]?.genus,\r\n            lengendary: o.is_legendary,\r\n            mythical: o.is_mythical,\r\n            shape: o.shape?.name,\r\n            order: o.order,\r\n            description: o.flavor_text_entries && o.flavor_text_entries[0]?.flavor_text?.replace('.', '.\\n')\r\n          }\r\n  \r\n        }),\r\n      sprites: deepSearch(o.sprites).sort((x, o) => {\r\n        if (x.includes('back'))\r\n          return 1\r\n        return 0;\r\n      }),\r\n      evolutions: await GetEvolutionsResult(o)\r\n    }\r\n  \r\n  }\r\n  \r\n export const  getPokemon = async (query)=>{\r\n  \r\n    return  await FormatPokemonData((await axios.get('https://pokeapi.co/api/v2/pokemon/'+query)).data)\r\n \r\n  }\r\n  \r\n  async function GetEvolutionsResult(o) {\r\n  \r\n    if (o.name === o.species.name) {\r\n  \r\n      return await fetch(o?.species.url)\r\n        .then(o => o.json())\r\n        .then(async o => await fetch(o.evolution_chain.url).then(o => o.json())\r\n          .then(async o => {\r\n  \r\n            let evolutions = getEvolutions(o.chain.evolves_to);\r\n            evolutions.splice(0, 0, o.chain.species?.name)\r\n  \r\n            const promise = new Promise((resolve, reject) => {\r\n  \r\n              let requests = []\r\n  \r\n              evolutions.forEach(o => {\r\n                requests.push(fetch('https://pokeapi.co/api/v2/pokemon/' + o))\r\n              })\r\n  \r\n              Promise.all(requests)\r\n                .then(o => o.map(async r => await r.json()))\r\n                .then(async o => {\r\n  \r\n                  let sprites = []\r\n  \r\n                  let pokemons = (await Promise.all(o))\r\n  \r\n                  for (let index = 0; index < pokemons.length; index++) {\r\n                    sprites = [...sprites, getMainSprite((pokemons[index]))[0]]\r\n                  }\r\n  \r\n                  return resolve(sprites)\r\n  \r\n                })\r\n  \r\n            })\r\n  \r\n  \r\n            return new Object({\r\n              totalEvolves: evolutions.length,\r\n              evolutions:\r\n                [\r\n                  evolutions.filter(o => o != ''),\r\n                  (await promise)\r\n                ]\r\n            })\r\n  \r\n          })\r\n        )\r\n    }\r\n    else\r\n      return new Object({\r\n        totalEvolves: 0,\r\n        evolutions:\r\n          [\r\n            [],[]\r\n          ]\r\n      })\r\n  \r\n  }\r\n  \r\n  \r\n  function getEvolutions(evolutions, names = []) {\r\n  \r\n    if (evolutions.length == 0)\r\n      return names;\r\n  \r\n    for (const evolution of evolutions) {\r\n      names.push(evolution.species.name)\r\n      getEvolutions(evolution.evolves_to, names)\r\n    }\r\n  \r\n    return names;\r\n  \r\n  }\r\n  \r\n  function getMainSprite(o) {\r\n  \r\n    let shiny = deepSearch(o.sprites, [], 'shiny')\r\n  \r\n    let final = shiny.find(o => o.includes('/home/')) || shiny.find(o => !o.includes('back'))\r\n  \r\n    return [o.sprites.other.home.front_default != null ?\r\n      o.sprites.other.home.front_default :\r\n      o.sprites.other.dream_world.front_default != null ?\r\n        o.sprites.other.dream_world.front_default :\r\n        o.sprites.front_default != null ?\r\n          o.sprites.front_default :\r\n          deepSearch(o.sprites, [])[0], final]\r\n  }\r\n  \r\n  \r\n  \r\n  function deepSearch(root, buffer = [], search = '') {\r\n  \r\n    let sprites = buffer;\r\n  \r\n    for (const prop in root) {\r\n  \r\n      if (typeof root[prop] === \"object\" && root[prop] != null)\r\n        deepSearch(root[prop], sprites)\r\n      else\r\n        sprites.push(root[prop])\r\n    }\r\n  \r\n    sprites = sprites.filter(o => {\r\n      if (o != null && search === '')\r\n        return true;\r\n      else if (o != null && o.includes(search))\r\n        return true;\r\n  \r\n      return false;\r\n    })\r\n  \r\n    return sprites;\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "]},"metadata":{},"sourceType":"module"}