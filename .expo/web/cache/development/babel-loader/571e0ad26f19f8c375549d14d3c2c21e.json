{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useEffect } from 'react';\nimport { getPokemon } from \"../../services/PokemonDataService.jsx\";\nvar PokemonContext = createContext({});\n\nvar PokemonContextProvider = function PokemonContextProvider(props) {\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pokemon = _React$useState2[0],\n      setPokemon = _React$useState2[1];\n\n  function updatePokemon(q) {\n    return _regeneratorRuntime.async(function updatePokemon$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setPokemon;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getPokemon(q));\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    return updatePokemon(25);\n  }, []);\n  return React.createElement(PokemonContext.Provider, {\n    value: {\n      pokemon: pokemon,\n      setPokemon: setPokemon,\n      updatePokemon: updatePokemon\n    }\n  }, props.children);\n};\n\nexport { PokemonContext, PokemonContextProvider };","map":{"version":3,"sources":["C:/Users/2904366/OneDrive - Jabil/Desktop/Pokedex-ReactNative/components/contexts/pokemonContext.jsx"],"names":["React","createContext","useEffect","getPokemon","PokemonContext","PokemonContextProvider","props","useState","undefined","pokemon","setPokemon","updatePokemon","q","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,UAAT;AAEA,IAAMC,cAAc,GAAGH,aAAa,CAAC,EAAD,CAApC;;AAGA,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAW;AAEtC,wBAA8BN,KAAK,CAACO,QAAN,CAAeC,SAAf,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,WAAeC,aAAf,CAA6BC,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,0BACIF,UADJ;AAAA;AAAA,6CACsBP,UAAU,CAACS,CAAD,CADhC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIAV,EAAAA,SAAS,CAAC;AAAA,WAAMS,aAAa,CAAC,EAAD,CAAnB;AAAA,GAAD,EAA0B,EAA1B,CAAT;AAGA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,UAAU,EAAVA,UAAX;AAAuBC,MAAAA,aAAa,EAAbA;AAAvB;AAAhC,KACKL,KAAK,CAACO,QADX,CADJ;AAMH,CAhBD;;AAkBA,SAAST,cAAT,EAAyBC,sBAAzB","sourcesContent":["import React, { createContext,useEffect } from 'react'\r\nimport { getPokemon } from '../../services/PokemonDataService.jsx'\r\n\r\nconst PokemonContext = createContext({});\r\n\r\n\r\nconst PokemonContextProvider = (props) => {\r\n\r\n    const [pokemon, setPokemon] = React.useState(undefined);\r\n    async function updatePokemon(q) {\r\n        setPokemon((await getPokemon(q)))\r\n    }\r\n\r\n    useEffect(() => updatePokemon(25), [])\r\n\r\n  \r\n    return (\r\n        <PokemonContext.Provider value={{ pokemon, setPokemon, updatePokemon }}>\r\n            {props.children}\r\n        </PokemonContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport { PokemonContext, PokemonContextProvider };"]},"metadata":{},"sourceType":"module"}