{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, List } from 'react-native-paper';\nimport { Capitalize } from \"../Functions.jsx\";\n\nvar axios = require('axios');\n\nexport var Autocomplete = function Autocomplete(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setresults = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayList = _useState4[0],\n      setdisplayList = _useState4[1];\n\n  useEffect(function _callee() {\n    var getitems, result, aux;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            getitems = function getitems(url) {\n              return _regeneratorRuntime.async(function getitems$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _regeneratorRuntime.awrap(axios.get(url));\n\n                    case 2:\n                      return _context.abrupt(\"return\", _context.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            result = null;\n            aux = [];\n\n          case 3:\n            if (!(result === null)) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(getitems(\"https://pokeapi.co/api/v2/pokemon\"));\n\n          case 6:\n            result = _context2.sent;\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(getitems(result.data.next));\n\n          case 11:\n            result = _context2.sent;\n\n          case 12:\n            aux = [].concat(_toConsumableArray(aux), _toConsumableArray(result.data.results.reduce(function (Ac, ac) {\n              return Ac.concat(ac.name);\n            }, [])));\n\n          case 13:\n            if (result.data.next != null) {\n              _context2.next = 3;\n              break;\n            }\n\n          case 14:\n            setresults(aux.map(function (o) {\n              return Capitalize(o);\n            }));\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  function textChange(e) {\n    props.settextinput(e);\n    if (e !== '') setdisplayList(results.filter(function (o) {\n      return o.toUpperCase().includes(e.toUpperCase());\n    }).slice(0, 5));else setdisplayList([]);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.background\n  }, React.createElement(View, null, React.createElement(TextInput, {\n    theme: {\n      colors: {\n        text: '#f0f0f0',\n        background: '#1e1e1e',\n        placeholder: '#f0f0f0'\n      }\n    },\n    left: React.createElement(TextInput.Icon, {\n      name: \"feature-search-outline\",\n      color: 'white'\n    }),\n    placeholder: \"Search pok\\xE9mon\",\n    value: props.textinput,\n    onChangeText: function onChangeText(e) {\n      return textChange(e);\n    }\n  })), displayList.map(function (o, i) {\n    return React.createElement(List.Item, {\n      key: i,\n      title: o,\n      onPress: function onPress() {\n        props.settextinput(o), setdisplayList([]);\n      },\n      left: function left(props) {\n        return React.createElement(List.Icon, _extends({}, props, {\n          icon: \"pokeball\"\n        }));\n      }\n    });\n  })));\n};\nvar styles = StyleSheet.create({\n  background: {\n    backgroundColor: '#f0f0f0',\n    position: 'relative',\n    marginTop: 20\n  },\n  input: {\n    backgroundColor: '#1e1e1e'\n  }\n});","map":{"version":3,"sources":["C:/Users/2904366/Downloads/PokedexMobile-ReactNative-main/components/Autocomplete.jsx"],"names":["React","useEffect","useState","TextInput","List","Capitalize","axios","require","Autocomplete","props","results","setresults","displayList","setdisplayList","getitems","url","get","result","aux","data","next","reduce","Ac","ac","concat","name","map","o","textChange","e","settextinput","filter","toUpperCase","includes","slice","styles","background","colors","text","placeholder","textinput","i","StyleSheet","create","backgroundColor","position","marginTop","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {  StyleSheet, View } from 'react-native'\r\nimport { TextInput, List } from 'react-native-paper';\r\nimport { Capitalize} from '../Functions.jsx';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nexport const Autocomplete = (props) => {\r\n\r\n    const [results, setresults] = useState([]);\r\n    const [displayList, setdisplayList] = useState([])\r\n  \r\n\r\n    useEffect(async () => {\r\n\r\n        let getitems = async (url) => {\r\n            return await axios.get(url)\r\n        }\r\n\r\n        let result = null;\r\n        let aux = []\r\n        do {\r\n\r\n            if (result === null)\r\n                result = await getitems(\"https://pokeapi.co/api/v2/pokemon\")\r\n            else\r\n                result = await getitems(result.data.next)\r\n\r\n            aux = [...aux, ...result.data.results\r\n                .reduce((Ac, ac) => Ac.concat(ac.name), [])]\r\n\r\n        } while (result.data.next != null);\r\n\r\n        setresults(aux.map(o=> Capitalize(o)));\r\n    }, [])\r\n\r\n\r\n    function textChange(e) {\r\n        props.settextinput(e);\r\n        if(e!== '')\r\n                setdisplayList(results.filter(o => o.toUpperCase().includes(e.toUpperCase())).slice(0,5))\r\n        else\r\n            setdisplayList([])\r\n    }\r\n\r\n\r\n    return (<>\r\n\r\n    <View style={styles.background}>\r\n        <View>\r\n            <TextInput\r\n                theme={{ colors: {text :'#f0f0f0', background:'#1e1e1e',placeholder :'#f0f0f0'} }}\r\n            left={<TextInput.Icon \r\n                name=\"feature-search-outline\" color={'white'} />}\r\n                    placeholder=\"Search pokÃ©mon\"\r\n                    value={props.textinput}\r\n                    \r\n                    onChangeText={(e) => textChange(e)} />\r\n        </View>\r\n        \r\n                {displayList.map((o, i) => <List.Item key={i}\r\n                    title={o}\r\n                    onPress={()=>{props.settextinput(o), setdisplayList([])}}\r\n                    left={props => <List.Icon {...props} icon=\"pokeball\" />}\r\n                />)}\r\n    </View>\r\n\r\n    </>)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    background: {\r\n        backgroundColor: '#f0f0f0',\r\n        position:'relative',\r\n        marginTop:20\r\n    },\r\n    input:{\r\n        backgroundColor: '#1e1e1e'\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}